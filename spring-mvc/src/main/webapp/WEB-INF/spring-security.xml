<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<!-- Demo-only: in production prefer LDAP or DB -->
	<user-service id="userService" >
		<user name="admin" password="admin" authorities="ROLE_ADMIN,ROLE_USER"/>
		<user name="user" password="user" authorities="ROLE_USER"/>
		<user name="test" password="" authorities="ROLE_USER"/>
	</user-service>
	<authentication-manager>
		<authentication-provider user-service-ref="userService" />
	</authentication-manager>

	<!-- URL-based security -->
	<http auto-config="true" use-expressions="true">
		 <intercept-url pattern="/employee/*/delete" access="hasRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/**" access="hasRole('ROLE_USER')"/>
	</http>
	
	<!-- @RolesAllowed -->
	<global-method-security jsr250-annotations="enabled"/>

</beans:beans>